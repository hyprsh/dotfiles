# Use Vi mode
setw -g mode-keys vi
set -g history-limit 10000
set -g base-index 1
setw -g pane-base-index 1
set -g allow-rename on
set -g renumber-windows on
set -g default-terminal "tmux-256color"
set -sa terminal-features ",${TERM}:RGB"
set -g mouse on
set -g set-titles on
set -g visual-bell off
set -g visual-activity off
set -g focus-events on
setw -g aggressive-resize on
set -g detach-on-destroy off
set -s escape-time 0

# Set the prefix to Ctrl+b (default)
unbind C-b
set -g prefix C-b
bind C-b send-prefix

# 'PREFIX r' to reload of the config file
unbind r
bind r source-file ~/.config/tmux/tmux.conf\; display-message '~/.config/tmux/tmux.conf reloaded'

# Allow holding Ctrl when using using prefix+p/n for switching windows
bind C-p previous-window
bind C-n next-window

# Move around panes like in vim
bind -r h select-pane -L
bind -r j select-pane -D
bind -r k select-pane -U
bind -r l select-pane -R
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

# Smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"

# Switch between previous and next windows with repeatable
bind -r n next-window
bind -r p previous-window

# Move the current window to the next window or previous window position
bind -r N run-shell "tmux swap-window -t $(expr $(tmux list-windows | grep \"(active)\" | cut -d \":\" -f 1) + 1)"
bind -r P run-shell "tmux swap-window -t $(expr $(tmux list-windows | grep \"(active)\" | cut -d \":\" -f 1) - 1)"

bind-key > swap-window -t +1 \; next
bind-key < swap-window -t -1 \; prev

# Switch between two most recently used windows
bind Space last-window

# Switch between two most recently used sessions
# bind ^ switch-client -l

# use PREFIX+| (or PREFIX+\) to split window horizontally and PREFIX+- or
# (PREFIX+_) to split vertically also use the current pane path to define the
# new pane path
bind | split-window -h -c "#{pane_current_path}"
bind \\ split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
bind  c  new-window -c "#{pane_current_path}"
bind  %  split-window -h -c "#{pane_current_path}"
bind \' split-window -v -c "#{pane_current_path}"

# Setup 'v' to begin selection as in Vim
if-shell -b '[ "$(echo "$TMUX_VERSION >= 2.4" | bc)" = 1 ]' \
    'bind-key -T copy-mode-vi v send-keys -X begin-selection;'

bind y run -b "tmux show-buffer | xclip -selection clipboard"\; display-message "Copied tmux buffer to system clipboard"

bind-key -r F new-window t



# # colors
set -g status-justify centre 
set -g window-status-current-format "#[bold]#I*#{?window_zoomed_flag,+ , }"
set -g window-status-format "#I#{?window_zoomed_flag,+ , }"
set -g status-right ""
set -g status-left ""
set -g status-style "NONE,fg=default,bg=default"
set -g mode-style "fg=black,bg=default"
set -g message-style "fg=black,bg=red"
set -g message-command-style "fg=black,bg=red"
set -g pane-border-style "fg=white"
set -g pane-active-border-style "fg=white"
setw -g window-status-activity-style "fg=white,bg=default"
setw -g window-status-separator ""
setw -g window-status-style "NONE,fg=white,bg=default"
