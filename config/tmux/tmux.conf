# Use Vi mode
setw -g mode-keys vi

# Increase scrollback buffer size
set -g history-limit 10000

# Start window and pane numbering from 1 for easier switching
set -g base-index 1
setw -g pane-base-index 1

# Allow automatic renaming of windows
set -g allow-rename on

# Renumber windows when one is removed.
set -g renumber-windows on

# Improve colors
set -g default-terminal "tmux-256color"
set -sa terminal-features ",${TERM}:RGB"

# Allow the mouse to resize windows and select tabs
set -g mouse on

# Allow tmux to set the terminal title
set -g set-titles on

# Monitor window activity to display in the status bar
setw -g monitor-activity on

# A bell in another window should cause a bell in the current window
set -g bell-action any

# Don't show distracting notifications
set -g visual-bell off
set -g visual-activity off

# Focus events enabled for terminals that support them
set -g focus-events on

# Useful when using sharing a session with different size terminals
setw -g aggressive-resize on

# don't detach tmux when killing a session
set -g detach-on-destroy off

# address vim mode switching delay (http://superuser.com/a/252717/65504)
set -s escape-time 0

# hotkeys

# -r means that the bind can repeat without entering prefix again
# -n means that the bind doesn't use the prefix

# Set the prefix to Ctrl+b (default)
unbind C-b
set -g prefix C-b

# Send prefix to a nested tmux session by doubling the prefix
bind C-b send-prefix

# 'PREFIX r' to reload of the config file
unbind r
bind r source-file ~/.config/tmux/tmux.conf\; display-message '~/.config/tmux/tmux.conf reloaded'

# Allow holding Ctrl when using using prefix+p/n for switching windows
bind C-p previous-window
bind C-n next-window

# Move around panes like in vim
bind -r h select-pane -L
bind -r j select-pane -D
bind -r k select-pane -U
bind -r l select-pane -R
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

# Smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"

# Switch between previous and next windows with repeatable
bind -r n next-window
bind -r p previous-window

# Move the current window to the next window or previous window position
bind -r N run-shell "tmux swap-window -t $(expr $(tmux list-windows | grep \"(active)\" | cut -d \":\" -f 1) + 1)"
bind -r P run-shell "tmux swap-window -t $(expr $(tmux list-windows | grep \"(active)\" | cut -d \":\" -f 1) - 1)"

bind-key > swap-window -t +1 \; next
bind-key < swap-window -t -1 \; prev

# Switch between two most recently used windows
bind Space last-window

# Switch between two most recently used sessions
# bind ^ switch-client -l

# use PREFIX+| (or PREFIX+\) to split window horizontally and PREFIX+- or
# (PREFIX+_) to split vertically also use the current pane path to define the
# new pane path
bind | split-window -h -c "#{pane_current_path}"
bind \\ split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
bind  c  new-window -c "#{pane_current_path}"
bind  %  split-window -h -c "#{pane_current_path}"
bind \' split-window -v -c "#{pane_current_path}"

# Setup 'v' to begin selection as in Vim
if-shell -b '[ "$(echo "$TMUX_VERSION >= 2.4" | bc)" = 1 ]' \
    'bind-key -T copy-mode-vi v send-keys -X begin-selection;'

bind y run -b "tmux show-buffer | xclip -selection clipboard"\; display-message "Copied tmux buffer to system clipboard"

bind-key -r F new-window t
# bind-key C-s run-shell "tss"

# # colors
# set -g status-justify centre 
# set -g window-status-current-format "#[fg=#1bfd9c,bg=default]#I*#W#{?window_zoomed_flag,+ , }"
# set -g window-status-format "#[fg=#c0c0c0,bg=default]#I.#W#{?window_zoomed_flag,+ , }"
# set -g status-right ""
# set -g status-left ""
# set -g status-style "NONE,fg=default,bg=default"
# set -g mode-style "fg=#3e8fb0,bg=default"
# set -g message-style "fg=#1c1c1c,bg=#c0c0c0"
# set -g message-command-style "fg=#1c1c1c,bg=#c0c0c0"
# set -g pane-border-style "fg=#c0c0c0"
# set -g pane-active-border-style "fg=#c0c0c0"
# setw -g window-status-activity-style "fg=#c0c0c0,bg=default"
# setw -g window-status-separator ""
# setw -g window-status-style "NONE,fg=#a9b1d6,bg=default"

# LACKLUSTER THEME BEGIN
color_lack="#708090"
color_luster="#deeeed"
color_orange="#ffaa88"
color_green="#789978"
color_blue="#7788AA"
color_red="#D70000"
color_black="#000000"
color_gray1="#080808"
color_gray2="#191919"
color_gray3="#2a2a2a"
color_gray4="#444444"
color_gray5="#555555"
color_gray6="#7a7a7a"
color_gray7="#aaaaaa"
color_gray8="#cccccc"
color_gray9="#DDDDDD"

# by default window names will just be their index
set-option -g automatic-rename              on
set-option -g automatic-rename-format       "#I"

# set to 12 for a 12-hour clock
set-option -g clock-mode-style              24 
set-option -g clock-mode-colour             "$color_gray6"

# NOTE: color variable expansion only works in double quotes
set-option -g status-style                  "fg=$color_luster,bg=default"
set-option -g copy-mode-current-match-style "fg=$color_gray1,bg=$color_gray8"
set-option -g copy-mode-match-style         "fg=$color_gray1,bg=$color_gray8"
set-option -g menu-selected-style           "fg=$color_gray1,bg=$color_luster"
set-option -g menu-style                    "fg=$color_luster,bg=$color_gray1"
set-option -g message-style                 "bg=$color_gray6,fg=$color_gray1" # command in vi-insert mode
set-option -g message-command-style         "bg=$color_gray6,fg=$color_gray4" # command in vi-normal mode
set-option -g mode-style                    "bg=$color_gray8,fg=$color_gray1"
set-option -g pane-active-border-style      "fg=$color_gray3"
set-option -g pane-border-style             "fg=$color_gray3"
set-option -g status-right-style            "fg=$color_gray6"
set-option -g window-status-current-style   "fg=$color_gray8"
set-option -g window-status-style           "fg=$color_gray5"
set -g default-terminal "${TERM}"
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'  # undercurl support
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'  # underscore colours - needs tmux-3.0

# display the window index number or index-number:name if has a name
set-option -g window-status-format         '#{?#{==:#W,},#I,#I:#W} '
set-option -g window-status-current-format '#{?#{==:#W,},#I,#I:#W} '

# status right will show the time in 24 hour format and if there is more than one
# server session the current session name will be there too
set-option -g status-right                 ' #{?#{>:#{server_sessions},1},(#{session_name}),} #(date +"%H:%M") '
set-option -g status-left                  ' '
# LACKLUSTER THEME END
